
#include "FastLED.h"

#define DATA_PIN 3
#define LED_TYPE WS2812B
#define COLOR_ORDER GRB
#define NUM_LEDS 54
#define BRIGHTNESS 10

CRGB leds[NUM_LEDS];                
enum Sides {GREEN, RED, BLUE, ORANGE, WHITE, YELLOW};   // enum of side colours
CRGB sColour[6];    // array to store the side colours to be assigned to the leds

// set up the colour of each side
void setupRubiksColours()
{
  // set up sides
  sColour[GREEN] = CRGB::Green;
  sColour[RED] = CRGB::Red;
  sColour[BLUE] = CRGB::Blue;
  sColour[ORANGE] = CRGB::DarkOrange;
  sColour[WHITE] = CRGB::White;
  sColour[YELLOW] = CRGB::Yellow;
const int buttonPin = 2;     // the number of the pushbutton pin     

// variables will change:
int buttonState = 0;         // variable for reading the pushbutton status

void setup() {
  // initialize the LED pin as an output:
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);
  delay(3000); // initial delay of a few seconds is recommended
  FastLED.addLeds<LED_TYPE,DATA_PIN,COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip); // initializes LED strip

  setupRubiksColours();
}

void loop() {
  // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin);

  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState == HIGH) {
    // turn LED on:
    leds[0]=sColour[	YELLOW	];
  } else {
    // turn LED off:
   leds[0]=sColour[	GREEN	]; 
  }
}